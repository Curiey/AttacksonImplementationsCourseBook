<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops" xml:lang="en-US">
<head>
  <meta charset="utf-8" />
  <meta name="generator" content="pandoc" />
  <title>ch012.xhtml</title>
  <link rel="stylesheet" type="text/css" href="../styles/stylesheet1.css" />
</head>
<body epub:type="bodymatter">
<section id="cha:c1_firstchapter" class="level1" data-number="11">
<h1 data-number="11">Writing LaTeX</h1>
<p>This document shows how you can get ePub-like formatting in LaTeX with the <code>memoir</code> document class. You can’t yet export directly to ePub from writeLaTeX, but you can download the source and run it through a format conversion tool, such as <code>htlatex</code> to get HTML, and then go from HTML to ePub with a tool like Sigil or Calibre. See <a href="http://tex.stackexchange.com/questions/16569">http://tex.stackexchange.com/questions/16569</a> for more advice. And they lived happily ever after.</p>
<section id="sec:c1_basicformatting" class="level2" data-number="11.1">
<h2 data-number="11.1">Basic Formatting</h2>
<section id="comments." class="level5" data-number="11.1.0.0.1">
<h5 data-number="11.1.0.0.1">Comments.</h5>
<p>If you want to just add a comment to a file without it being printed, add a <code class="Tex">%</code> (percentage) sign in front of it. In the template files, you will find a number of such comments as well as deactivated commands.</p>
</section>
<section id="bold-formatting." class="level5" data-number="11.1.0.0.2">
<h5 data-number="11.1.0.0.2">Bold formatting.</h5>
<p>You can make your text bold by surrounding it with the command <code class="Tex">\textbf{}</code>.</p>
</section>
<section id="italics-formatting." class="level5" data-number="11.1.0.0.3">
<h5 data-number="11.1.0.0.3">Italics formatting.</h5>
<p>You can make your text italic by surrounding it with the command <code class="Tex">\textit{}</code>.</p>
</section>
<section id="small-caps." class="level5" data-number="11.1.0.0.4">
<h5 data-number="11.1.0.0.4">Small caps.</h5>
<p>You can change your text into small capitals by surrounding it with the command <code class="Tex">\textsc{}</code>.</p>
</section>
<section id="text-em-dashes." class="level5" data-number="11.1.0.0.5">
<h5 data-number="11.1.0.0.5">Text em dashes.</h5>
<p>Em dashes are used to connect two related sentences. There is no space before or after the em dash. Within the template, use the command <code class="Tex">\textemdash{}</code> instead of using the dash you copied over from your text file. This will also take care of issues relating to line breaks.</p>
</section>
<section id="paragraphs." class="level5" data-number="11.1.0.0.6">
<h5 data-number="11.1.0.0.6">Paragraphs.</h5>
<p>Paragraphs are handled automatically by leaving an empty line between each paragraph. Adding more than one empty line will not change anythingremember it is not a “what you see is what you get” editor.</p>
</section>
<section id="empty-line." class="level5" data-number="11.1.0.0.7">
<h5 data-number="11.1.0.0.7">Empty line.</h5>
<p>If you want to force an empty line (recommended only in special cases), you can use <code class="Tex">~\\</code> (tilde followed by two backslashes).</p>
</section>
<section id="new-page." class="level5" data-number="11.1.0.0.8">
<h5 data-number="11.1.0.0.8">New page.</h5>
<p>Pages are handled automatically by LaTeX. It tries to be smart in terms of positioning paragraphs and pictures. Sometimes it is necessary to add a page break, though (ideally, at the very end when polishing the final text). For that, simply add a <code class="Tex">\newpage</code>.</p>
</section>
<section id="quotation-marks." class="level5" data-number="11.1.0.0.9">
<h5 data-number="11.1.0.0.9">Quotation marks.</h5>
<p>In the normal computer character set, there are more than one type of quotation marks. It is required to change all quotation marks into <code class="Tex">``\dots''</code> (two back ticks at the beginning and two single ticks at the end) and refrain from using “…” (or “…”) altogether. This is because Word’s “…” uses special characters, and “…” do not mark the beginning and end of the quotation.</p>
</section>
<section id="horizontal-line." class="level5" data-number="11.1.0.0.10">
<h5 data-number="11.1.0.0.10">Horizontal line.</h5>
<p>For a horizontal line, simply write <code class="Tex">\toprule</code>, <code class="Tex">\midrule</code>, or <code class="Tex">\bottomrule</code> from booktabs. You can also use the less recommend <code class="Tex">\hline</code>.</p>
</section>
<section id="underlined-text." class="level5" data-number="11.1.0.0.11">
<h5 data-number="11.1.0.0.11">Underlined text.</h5>
<p>It is generally not recommended to use underlined text.</p>
</section>
<section id="urls." class="level5" data-number="11.1.0.0.12">
<h5 data-number="11.1.0.0.12">URLs.</h5>
<p>For URLs you need a special monospaced font. Also, for URLs in e-books, you want to make them clickable. Both can be accomplished by putting the URL in the <code class="Tex">\url{}</code> environment, for example <code class="Tex">\url{https://www.lode.de}</code>.</p>
</section>
<section id="special-characters." class="level5" data-number="11.1.0.0.13">
<h5 data-number="11.1.0.0.13">Special characters.</h5>
<p>If you need special characters or mathematical formulas, there is a whole body of work on that subject. It is not in the scope of this book to provide you a comprehensive list.</p>
</section>
</section>
<section id="sec:c1_lists" class="level2" data-number="11.2">
<h2 data-number="11.2">Lists</h2>
<section id="itemized-list." class="level5" data-number="11.2.0.0.1">
<h5 data-number="11.2.0.0.1">Itemized list.</h5>
<p>To create a bullet point list (like the list in this section), use the following construct:</p>
<pre class="Tex" data-language="Tex"><code>\begin{itemize}
    \item Your first item.
    \item Your second item.
    \item Your third item.
%   \item Your commented item.
\end{itemize}</code></pre>
<p>The result will look like this:</p>
<ul>
<li><p>Your first item.</p></li>
<li><p>Your second item.</p></li>
<li><p>Your third item.</p></li>
</ul>
</section>
<section id="numbered-list." class="level5" data-number="11.2.0.0.2">
<h5 data-number="11.2.0.0.2">Numbered list.</h5>
<p>To create a numbered list, replace itemize with enumerate:</p>
<pre class="Tex" data-language="Tex"><code>\begin{enumerate}
    \item Your first item.
    \item Your second item.
    \item Your third item.
\end{enumerate}</code></pre>
<p>The result will look like this:</p>
<ol>
<li><p>Your first item.</p></li>
<li><p>Your second item.</p></li>
<li><p>Your third item.</p></li>
</ol>
</section>
</section>
<section id="sec:c1_verbatim" class="level2" data-number="11.3">
<h2 data-number="11.3">Verbatim text</h2>
<p>Sometimes, you do want to simply use text in a verbatim way (including special characters and LaTeX commands). For this, simply use the <code class="Tex">\lstlisting</code> environment: <code class="Tex">\begin{lstlisting}...\end{lstlisting}</code> I put the itemize and enumerate listings above into a <code class="Tex">\lstlisting</code> block. If I did not, LaTeX would have displayed the list as a list, instead of displaying the code.</p>
</section>
<section id="sec:c1_chaptersandsections" class="level2" data-number="11.4">
<h2 data-number="11.4">Chapters and Sections</h2>
<p>LaTeX uses a hierarchy of chapters, sections, and subsections. There are also sub-subsections, but for the sake of the reader, it is best to not go that deep. If you come across a situation where it looks like you need it anyway, I recommend thinking over the structure of your book rather than using sub-subsections.</p>
<p>In terms of their use in the code, they are all similar:</p>
<ul>
<li><p><code class="Tex">\chapter{Title of the Chapter}\label{cha:c1_chaptername}</code></p></li>
<li><p><code class="Tex">\section{Title of the Section}\label{sec:c1_sectionname}</code></p></li>
<li><p><code class="Tex">\subsection{Title of the Subsection}\label{subsec:c1_subsectionname}</code></p></li>
<li><p><code class="Tex">\paragraph{Title of the Paragraph}\label{par:c1_paragraph}</code></p></li>
</ul>
<p>When using these commands, obviously replace the title, but also the label. For the label, I recommend to have it start with either “cha:”, “sec:”, “subsec:”, etc. to specify what kind of label it is, followed with c and the current chapter number, an underscore, and the chapter, section, or subsection in one word and lowercase. These labels can then be used for references like we used previously for the images. For example, if you have defined a section <code class="Tex">\section{Chapters and Sections}\label{sec:c1_chaptersandsections}</code>, you could write “We will discuss chapters and sections in section <code class="Tex">\cref{sec:c1_chaptersandsections}</code> ” which results in the document in “We will discuss chapters and sections in <a href="ch012.xhtml#sec:c1_chaptersandsections" data-reference-type="ref" data-reference="sec:c1_chaptersandsections">11.4</a>”.</p>
</section>
<section id="sec:c1_tables" class="level2" data-number="11.5">
<h2 data-number="11.5">Tables</h2>
<p>In LaTeX, tables are like images and put into the figure environment. As such, they have a caption, label, and a positioning like we discussed above with the images. Drawing a table requires a bit of coding:</p>
<pre class="Tex" data-language="Tex"><code>\begin{table}[!ht]
    \centering
    \begin{tabular}{p{2.5cm}|p{3.5cm}|p{3.5cm}}
    \hline
    &amp; \textbf{Word} &amp; \textbf{\LaTeX{}} \\ 
    \hline
    
    Editor &amp; ``what you see is what you get&#39;&#39; &amp; source file is compiled \\
    \hline
    
    Compatibility &amp; dependent on editor &amp; independent of editor \\
    \hline
    
    Graphics &amp; simple inbuilt editor &amp; powerful but complex editor \\
    \hline
    
    Typography &amp; optimized for speed &amp; optimized for quality \\
    \hline
    
    Style &amp; inbuilt style &amp; separate style document \\
    \hline
    
    Multi-platform &amp; only via export &amp; possible with scripting \\
    \hline
    
    Refresh &amp; some elements need, manual refresh &amp; everything is refreshed with each compile \\
    \hline
    
    Formulas &amp; basic support needs external tools &amp; complete support \\
    \hline
    
    \end{tabular}
    \caption{Comparison of Word and \LaTeX{}} \label{tab:c1_comparisonwordlatex}
\end{table}</code></pre>
<p>This table from the beginning of the book has the familiar figure, label, caption, and centering commands. The actual table is configured with the <code class="Tex">\tabular{}</code> environment. Following the tabular command, you configure the columns in curly braces. Each column is separated with a vertical line and the <code class="Tex">p{...}</code> specifies the width of the column. With <code class="Tex">{p{2.5cm}|p{3.5cm}|p{3.5cm}}</code>, you would have three columns with 2.5cm width for the first column and 3.5cm width for the two others. Alternatively, you can use <code class="Tex">c</code> instead of <code class="Tex">p</code> and leave out the curly braces with the width. Then, LaTeX simply calculates the required widths automatically. Then, for each line of the table, simply write: <code class="Tex">content of the first cell &amp; content of the second cell &amp; content of the third cell\\\midrule</code>.</p>
<div id="tab:c1_comparisonwordlatex">
<table>
<caption>Comparison of Word and LaTeX</caption>
<thead>
<tr class="header">
<th style="text-align: left;"></th>
<th style="text-align: left;"><strong>Word</strong></th>
<th style="text-align: left;"><strong>LaTeX</strong></th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: left;">Editor</td>
<td style="text-align: left;">“what you see is what you get”</td>
<td style="text-align: left;">source file is compiled</td>
</tr>
<tr class="even">
<td style="text-align: left;">Compatibility</td>
<td style="text-align: left;">dependent on editor</td>
<td style="text-align: left;">independent of editor</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Graphics</td>
<td style="text-align: left;">simple inbuilt editor</td>
<td style="text-align: left;">powerful but complex editor</td>
</tr>
<tr class="even">
<td style="text-align: left;">Typography</td>
<td style="text-align: left;">optimized for speed</td>
<td style="text-align: left;">optimized for quality</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Style</td>
<td style="text-align: left;">inbuilt style</td>
<td style="text-align: left;">separate style document</td>
</tr>
<tr class="even">
<td style="text-align: left;">Multi-platform</td>
<td style="text-align: left;">only via export</td>
<td style="text-align: left;">possible with scripting</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Refresh</td>
<td style="text-align: left;">some elements need, manual refresh</td>
<td style="text-align: left;">everything is refreshed with each compile</td>
</tr>
<tr class="even">
<td style="text-align: left;">Formulas</td>
<td style="text-align: left;">basic support needs external tools</td>
<td style="text-align: left;">complete support</td>
</tr>
</tbody>
</table>
</div>
</section>
<section id="sec:c1_footnotes" class="level2" data-number="11.6">
<h2 data-number="11.6">Footnotes</h2>
<p>Finally, for footnotes, there is the command <code class="Tex">\footnote{}</code>. You can place it anywhere you like, LaTeX will then automatically add the number of the footnote at that place, and put the footnote text into the footer area. It looks like this.<a href="#fn1" class="footnote-ref" id="fnref1" epub:type="noteref">1</a> The challenge here relates to grammar: footnotes start with capital letters, parentheses with lower case, and the footnote comes after the period, the parentheses have to start before the period.</p>
</section>
<section id="sec:c1_images" class="level2" data-number="11.7">
<h2 data-number="11.7">Inserting Images</h2>
<p>As in Word, in LaTeX, images are separate from the text. Images are usually packaged together with a caption and a label to reference it from the text. These three entities are packaged together into a figure. The figure itself configures the size of the image as well as where it should be put. Let us look at a code sample:</p>
<pre class="Tex" data-language="Tex"><code>\begin{figure}[!ht]
    \centering
    \includegraphics{images/ebookLatex_Cover.jpg}
    \caption{The cover of this book.} \label{fig:c1_cover}
\end{figure}</code></pre>
<p>Let us go through this line by line. At the core is the image, included with <code class="Tex">\includegraphics{path to file}</code>. It inserts the image specified by the “path to file.” With the <code class="Tex">\adjustbox{}</code> command, we can adjust the image size according to the page width (<code class="Tex">\columnwidth</code>) and page height (<code class="Tex">\textheight</code>).</p>
<p>Below there is the caption and the label. LaTeX automatically numbers each figure, so in the text, we can later refer to it with <code class="Tex">\ref{c1_cover:fig}</code> which prints out the number of the figure. Finally, all these commands are centered with the <code class="Tex">\centering</code> command and surrounded with the figure environment. The <code class="Tex">[</code>ht]! instructs LaTeX to try to place the image exactly where it is in the LaTeX code.</p>
<figure>
<img src="../media/file152.jpg" id="fig:c1_cover" alt="The cover of this book." /><figcaption aria-hidden="true">The cover of this book.</figcaption>
</figure>
<p>In , you can see the result of the command. Instead of graphics, you can also include other TEX files that contain graphics (or commands to draw graphics, see ).</p>
</section>
<section id="sec:c1_tikzgraphics" class="level2" data-number="11.8">
<h2 data-number="11.8">TikZ Graphics</h2>
<p>For graphics, you can use the inbuilt TikZ graphics generator. Due to its flexibility, I even recommend images you already have for a number of reasons:</p>
<ul>
<li><p>TikZ graphics can very easily changed (especially for for example translations or making corrections).</p></li>
<li><p>TikZ graphics are small and flexible. They can be easily scaled to any size and are directly integrated into your project (no time-consuming editing in an external graphics program necessary).</p></li>
<li><p>TikZ graphics look better. As vector graphics are sent directly to the printer, we need not to worry about readability.</p></li>
</ul>
<p>If you want to create a TikZ graphic, simply create a new TEX file in the <em>tex-images</em> folder and include it with <code class="Tex">\input{...}</code> <code class="Tex">\includegraphics{}</code>) where you want to.</p>
<p>Then, do a “recompile from scratch” by clicking on the top right corner of the preview window (showing Warning or Error) to regenerate the TikZ file. If “up-to-date and saved” is shown, delete the <em>tikz-cache</em> directory and recreate it.</p>
<p>For the format of the file itself, it is a series of commands surrounded by the <code class="Tex">\begin{tikzpicture}...\end{tikzpicture}</code> Discussing all the commands is beyond the scope of this book, so I recommend three options:</p>
<ul>
<li><p>Check out the PGF manual at <a href="https://www.ctan.org/pkg/pgf">https://www.ctan.org/pkg/pgf</a>. It is more than 1100 pages full with documentation of each command and corresponding examples.</p></li>
<li><p>Check out the few example TikZ pictures from my two books <span class="citation" data-cites="PFH1E PFH2E"></span> in the <em>tex-images</em> directory.</p></li>
</ul>
</section>
</section>
<section class="footnotes" epub:type="footnotes">
<hr />
<ol>
<li id="fn1" epub:type="footnote"><p>This is a footnote.<a href="#fnref1" class="footnote-back" role="doc-backlink">↩︎</a></p></li>
</ol>
</section>
</body>
</html>
